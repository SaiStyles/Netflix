{"ast":null,"code":"var _jsxFileName = \"/home/sai/Documents/Netflix/my-app/src/Components/Banner/Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { API_KEY, imageUrl } from '../../constants/constants';\nimport axios from '../axios';\nimport './Banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    const x = Math.floor(Math.random() * 19 + 1);\n    axios.get(`trending/all/day?api_key=${API_KEY}`).then(response => {\n      setMovie(response.data.results[x]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})`\n    },\n    className: \"banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: movie ? movie.title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"Play \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"My list \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"description\",\n        children: movie ? movie.overview : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade_bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Banner, \"zLQzb3KCyZr1Tue8ze3ysZzgn6s=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","API_KEY","imageUrl","axios","Banner","movie","setMovie","x","Math","floor","random","get","then","response","data","results","backgroundImage","backdrop_path","title","overview"],"sources":["/home/sai/Documents/Netflix/my-app/src/Components/Banner/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { API_KEY, imageUrl } from '../../constants/constants'\nimport axios from '../axios'\nimport './Banner.css'\n\n\nfunction Banner() {\n    const [movie, setMovie] = useState()\n\n    useEffect(() => {\n        const x = Math.floor((Math.random() * 19) + 1)\n        axios.get(`trending/all/day?api_key=${API_KEY}`).then((response) => {\n            setMovie(response.data.results[x])\n\n        })\n    }, [])\n    return (\n        <div style={{ backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})` }} className='banner'>\n            <div className='content'>\n                <h1 className='title'>{movie ? movie.title : \"\"}</h1>\n                <div className='banner_buttons'>\n                    <button className='button'>Play </button>\n                    <button className='button'>My list </button>\n                </div>\n                <h1 className='description'>{movie ? movie.overview : \"\"}</h1>\n            </div>\n            <div className=\"fade_bottom\"></div>\n        </div>\n\n    )\n}\n\nexport default Banner"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,2BAAlC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,cAAP;;;AAGA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMQ,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,EAAjB,GAAuB,CAAlC,CAAV;IACAP,KAAK,CAACQ,GAAN,CAAW,4BAA2BV,OAAQ,EAA9C,EAAiDW,IAAjD,CAAuDC,QAAD,IAAc;MAChEP,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBR,CAAtB,CAAD,CAAR;IAEH,CAHD;EAIH,CANQ,EAMN,EANM,CAAT;EAOA,oBACI;IAAK,KAAK,EAAE;MAAES,eAAe,EAAG,OAAMX,KAAK,GAAGH,QAAQ,GAAGG,KAAK,CAACY,aAApB,GAAoC,EAAG;IAAtE,CAAZ;IAAwF,SAAS,EAAC,QAAlG;IAAA,wBACI;MAAK,SAAS,EAAC,SAAf;MAAA,wBACI;QAAI,SAAS,EAAC,OAAd;QAAA,UAAuBZ,KAAK,GAAGA,KAAK,CAACa,KAAT,GAAiB;MAA7C;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACI;UAAQ,SAAS,EAAC,QAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,SAAS,EAAC,QAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAMI;QAAI,SAAS,EAAC,aAAd;QAAA,UAA6Bb,KAAK,GAAGA,KAAK,CAACc,QAAT,GAAoB;MAAtD;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GAxBQf,M;;KAAAA,M;AA0BT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}