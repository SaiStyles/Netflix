{"ast":null,"code":"var _jsxFileName = \"/home/sai/Documents/Netflix/my-app/src/Components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport axios from '../axios';\nimport Youtube from 'react-youtube';\nimport { API_KEY, imageUrl } from '../../constants/constants';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [urlId, setUrlId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const handleMovie = id => {\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      console.log(response.data.results[0]);\n\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallposter' : 'poster',\n        src: imageUrl + obj.backdrop_path,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), urlId && /*#__PURE__*/_jsxDEV(YouTube, {\n      opts: opts,\n      videoId: urlId.key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RowPost, \"ihUknzojMIxMRJUwPW1ofTLhVM4=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","axios","Youtube","API_KEY","imageUrl","YouTube","RowPost","props","movies","setMovies","urlId","setUrlId","get","url","then","response","console","log","data","results","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","isSmall","backdrop_path","key"],"sources":["/home/sai/Documents/Netflix/my-app/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './RowPost.css'\nimport axios from '../axios'\nimport Youtube from 'react-youtube'\nimport {API_KEY, imageUrl } from '../../constants/constants'\nimport YouTube from 'react-youtube'\n\nfunction RowPost(props) {\n  const [movies, setMovies] = useState([])\n  const [urlId,setUrlId]= useState('')\n  useEffect(() => {\n    axios.get(props.url).then((response) => {\n      console.log(response.data);\n      setMovies(response.data.results)\n    })\n  }, [])\n    \n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay:1\n    },\n  }\n  \n  const handleMovie=(id)=>{\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\n      console.log(response.data.results[0]);\n      if(response.data.results.length!==0){\n        setUrlId(response.data.results[0])\n\n      }\n    })\n  }\n\n  return (\n    <div className='row'>\n      <h2>{props.title}</h2>\n      <div className='posters'>\n        {movies.map((obj)=>\n\n          \n          <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallposter' :'poster'} src= {imageUrl+obj.backdrop_path} alt=\"\"/>\n        )}\n\n      </div>\n         {urlId && <YouTube opts={opts} videoId={urlId.key}/> }\n    </div>\n  )\n}\n\nexport default RowPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAiC,2BAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACU,KAAD,EAAOC,QAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACW,GAAN,CAAUL,KAAK,CAACM,GAAhB,EAAqBC,IAArB,CAA2BC,QAAD,IAAc;MACtCC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MACAT,SAAS,CAACM,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT;EAOA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAC;IAFC;EAHD,CAAb;;EASA,MAAMC,WAAW,GAAEC,EAAD,IAAM;IACtBzB,KAAK,CAACW,GAAN,CAAW,SAAQc,EAAG,mBAAkBvB,OAAQ,iBAAhD,EAAkEW,IAAlE,CAAwEC,QAAD,IAAY;MACjFC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAZ;;MACA,IAAGJ,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBQ,MAAtB,KAA+B,CAAlC,EAAoC;QAClChB,QAAQ,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR;MAED;IACF,CAND;EAOD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,UAAKZ,KAAK,CAACqB;IAAX;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,SAAf;MAAA,UACGpB,MAAM,CAACqB,GAAP,CAAYC,GAAD,iBAGV;QAAK,OAAO,EAAE,MAAIL,WAAW,CAACK,GAAG,CAACJ,EAAL,CAA7B;QAAuC,SAAS,EAAEnB,KAAK,CAACwB,OAAN,GAAgB,aAAhB,GAA+B,QAAjF;QAA2F,GAAG,EAAG3B,QAAQ,GAAC0B,GAAG,CAACE,aAA9G;QAA6H,GAAG,EAAC;MAAjI;QAAA;QAAA;QAAA;MAAA,QAHD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,EAUMtB,KAAK,iBAAI,QAAC,OAAD;MAAS,IAAI,EAAEU,IAAf;MAAqB,OAAO,EAAEV,KAAK,CAACuB;IAApC;MAAA;MAAA;MAAA;IAAA,QAVf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA3CQ3B,O;;KAAAA,O;AA6CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}